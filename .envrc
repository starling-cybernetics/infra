# Watch all nix files for changes
watch_file $(find . -name "*.nix" -printf '"%p" ')

# Dot env filename
DOT_ENV_FILE=.env

# Watch the .env file for changes
watch_file $DOT_ENV_FILE

# Only load variables from 1Password if 1Password CLI is installed and configured properly in the
# shell; otherwise, load everything from the .env file *except* for 1Password secret references.
if command -v op &> /dev/null && op signin &>/dev/null; then
  # Load all the environment variables from 1Password into the current shell, as well as all the
  # normal non-secret environment variables from the .env file.
  echo "Loading variables from $DOT_ENV_FILE, including 1Password secrets ..."
  direnv_load op run --env-file $DOT_ENV_FILE --no-masking -- direnv dump
else
  echo "Loading variables from $DOT_ENV_FILE ..."
  dotenv $DOT_ENV_FILE
  # Remove any assignments in the .env file which were 1Password secret references, because they
  # cannot be resolved in this execution context, and it would be confusing for programs to see the
  # "op://..." syntax in a variable rather than instead report the absence of the variable.
  for assign in $(env); do
    lhs=$(echo $assign | sed -e 's/=.*$//')
    rhs=$(echo $assign | sed -e 's/^[A-Za-z_][A-Za-z0-9_]*=//')
    if echo $rhs | grep -q '^op://'; then
      unset $lhs
    fi
  done
fi

use flake